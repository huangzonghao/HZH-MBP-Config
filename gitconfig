[user]
    name = HuangZonghao
    email = coding@hzh.io
[filter "media"]
    required = true
    clean = git media clean %f
    smudge = git media smudge %f
[push]
    default = matching
[merge]
    tool = vim
[mergetool "vim"]
    cmd = "vim $MERGED"
[alias]
    d = difftool
    m = mergetool
    la = log --pretty=format:'%C(bold yellow)%h %C(cyan)%an%C(green)(%ad) %Creset%s%C(bold red)%d' --decorate --graph --date=format:'%y-%m-%d %H:%M%z'
    ll = log --pretty=format:'%C(bold yellow)%h%Cred%d  %Creset%s %C(cyan)  <%an> %C(green) (%aD)' --decorate  --numstat
    st = status -s
    aa = stage -A
    cm = commit -m
    ci = commit
    co = checkout
    cp = cherry-pick
    cpc = cherry-pick --continue
    b = branch
    bv = branch -v
    ba = branch -a
    rb = rebase
    rbc = rebase --continue
    rbt = "!less .git/rebase-merge/git-rebase-todo"
    r = "!f() { [ $# -eq 1 ] && git reset HEAD~$1 || git reset; }; f"
    rh = "!f() { [ $# -eq 1 ] && git reset HEAD~$1 --hard || git reset --hard; }; f"
    rl = reflog
    sl = stash list
    ss = stash save
    sa = "!f() { [ $# -eq 1 ] && git stash apply stash@{$1} || git stash apply; }; f"
    sp = "!f() { [ $# -eq 1 ] && git stash pop stash@{$1} || git stash pop; }; f"
    sd = "!f() { [ $# -eq 1 ] && git stash drop stash@{$1} || git stash drop; }; f"
    pinfo = info --no-config
    ph = push
    pl = pull
    prb = pull --rebase
    subup = submodule update --init --recursive
    subups = submodule update --init --recursive --depth 1
[diff]
    tool = vimdiff
[core]
    editor = vim
[filter "lfs"]
    clean = git lfs clean %f
    smudge = git lfs smudge %f
    required = true
[log]
    decorate = true
[credential]
    helper = cache
