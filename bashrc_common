# set some alias for the ls commands --by huangzonghao@2014.7.18
# note the ls settings are not for the zsh, check zshrc to change the behavior of ls in zsh
alias ls="ls -G"
# depends on different linux distributions
#alias ls="ls --color=auto"
alias la="ls -AG"
alias ll="ls -aoghlGF"

# set the alias for latexmk -- by huangzonghao@2014.10.4
# note the latexmk is usually installed together with tex distribution
alias laclean="rm  *.out *.dvi *.aux *.fdb_latexmk *.fls *.log *.ps"
alias lmk="latexmk -xelatex -pvc -pdf *.tex"

alias ebrcc="vim ~/dotfiles/bashrc_common"


alias tree="tree -C"
alias du="du -hsc"

#alias rmds ="find . -name .DS_Store -delete"
# to disable the creation in network file system, run the following
# "defaults write com.apple.desktopservices DSDontWriteNetworkStores true"

#export PATH="/usr/local/bin:$PATH"


alias cao="./executable"
alias hosts="sudo vim /etc/hosts"


alias cslab="ssh zhuangaj@csl2wk22.cse.ust.hk"
alias ielm="ssh hzh@verse.ielm.ust.hk"
alias gpu="ssh zhuangaj@gpu1.ust.hk"

#some funny commands
# sl fortune cowsay cmatrix figlet
# the alias for sublime text --Tue Apr 14 17:23:50 HKT 2015


#############################
######## functions ##########
#############################

# The function to remove the temp files, inspired by the following commands
# remove the .DS_Store file
#alias rmds="find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch"

# add {} at the end in case the file name too long error
#alias rmds="find . -name '.DS_Store' -print0 | xargs -0 rm -f {}"

# rm temp files
rmt(){
		declare USER_OPTION;
		declare STATUS=0;
		while [ $STATUS -ne 1 ]
		do	
				echo "Which type of temp files would you like to get rid of ?"
				echo ".DS_Store(d) Thumbs.db(t) or Customized (c)?"
				read USER_OPTION

				# make sure you finish processing d and t first because the USER_OPTION is gonna be changed in c and afterwards
				if [[ $USER_OPTION = *d* ]]
				then 
						echo "Now start to remove .DS_Store file within this directory"
						find . -name .DS_Store -print0 | xargs -0 rm -f {}
						echo "done"
						STATUS=1
				fi
				if [[ $USER_OPTION = *t* ]]
				then
						echo "Now start to remove Thumbs.db file within this directory"
						find . -name Thumbs.db -print0 | xargs -0 rm -f {}
						echo "done"
						STATUS=1
				fi
				if [[ $USER_OPTION = *c* ]]
				then
						echo "type in the file name"
						read USER_OPTION
						echo "Now start to remove $USER_OPTION file within this directory"
						find . -name $USER_OPTION -print0 | xargs -0 rm -f {}
						echo "done"
						STATUS=1
				fi

				if [[ $STATUS = 1 ]]
				then
						echo "Another round? (y/n)"
						read USER_OPTION
						if [[ $USER_OPTION = "y" ]]
						then STATUS=0
						fi
				fi
		done
		echo "All process done, exit"

}

# a function to package all the templates --Tue Apr  7 13:01:39 HKT 2015
tem(){
        declare STATUS   # use declare to make all the variable local
        declare USER_OPTION
        declare FILE_NAME
        #declare USER
        if [ $# -eq 0 ]
                then
                        STATUS=0
                else
                        STATUS=1
                        OPTION=$1
        fi

        while [ $STATUS -eq 0 ]
        do
				echo "Please enter the type of the template:  1)latex, 2)makefile, 3)sbatch, 4)webpage, 5)website"
                read  USER_OPTION

				case $USER_OPTION in
						"latex" | "1")
								echo "Please enter the file name : "
								read FILE_NAME
								cp -i ~/.vim/template/latex.tex $FILE_NAME.tex; vim $FILE_NAME.tex;
								STATUS=1;
								;;
						"makefile" | "2")
								cp -i ~/.vim/template/makefile makefile && vim makefile
								STATUS=1;
								;;
						"sbatch" | "3")
								echo "CPU version or GPU version?"
								read USER_OPTION
								echo "Please enter the file name : "
								read FILE_NAME
								case $USER_OPTION in
										"cpu")
												cp -i ~/.vim/template/sbatchcpu.sh $FILE_NAME.sh && vim $FILE_NAME.sh
												;;
										"gpu")
												cp -i ~/.vim/template/sbatchgpu.sh $FILE_NAME.sh && vim $FILE_NAME.sh
												;;
								esac
								STATUS=1;
								;;
						"webpage" | "4")
								echo "Please enter the file name : "
								read FILE_NAME
								cp -r ~/.vim/template/webpage.html ./$FILE_NAME.html && vim $FILE_NAME.html
								STATUS=1;
								;;
						"website" | "5")
								cp -r ~/.vim/template/website/* .
								STATUS=1;
								;;
				esac
				if [ $STATUS -eq 1 ]
				then
						echo "Anther file? (y/n)";
						read USER_OPTION;
						if [[ $USER_OPTION = y ]]
						then STATUS=0;
						fi
				fi
        done
}

# the function to kaiguang a cpp source file --Fri May 22 17:51:04 HKT 2015
kaiguang(){
        if [ $# -eq 0 ]
        then
                /bin/cat ~/.vim/template/godbless
        else
                /bin/cat ~/.vim/template/godbless $1 > TEMPFILE
                mv TEMPFILE $1
        fi
}

# the shortcut for making a directory and cd into it
mcd(){
        if [ $# != '0' ]
        then
                mkdir $1;
                cd $1;
        fi
}

checkColor(){
        eval $(echo "no:global default;fi:normal file;di:directory;ln:symbolic link;pi:named pipe;so:socket;do:door;bd:block device;cd:character device;or:orphan symlink;mi:missing file;su:set uid;sg:set gid;tw:sticky other writable;ow:other writable;st:sticky;ex:executable;"|sed -e 's/:/="/g; s/\;/"\n/g')
        IFS=:
        for i in $LS_COLORS
        do
                echo -e "\e[${i#*=}m$( x=${i%=*}; [ "${!x}" ] && echo "${!x}" || echo "$x" )\e[m"
        done
}

