#! /bin/bash

# The function to remove the temp files, inspired by the following commands
# remove the .DS_Store file
#alias rmds="find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch"
# add {} at the end in case the file name too long error
#alias rmds="find . -name '.DS_Store' -print0 | xargs -0 rm -f {}"

# rm temp files
declare USER_OPTION;
declare TEMP_COUNTER;
declare STATUS=0;
while [ $STATUS -ne 1 ]
do
    echo "Which type of temp files would you like to get rid of ?"
    echo ".DS_Store(d) Thumbs.db(t) .orig(o) or Customized (c)?"
    read USER_OPTION

    # make sure you finish processing d and t first because the USER_OPTION is gonna be changed in c and afterwards
    if [[ $USER_OPTION = *d* ]]
    then
        echo "Now start to remove .DS_Store file within this directory"
        find . -name .DS_Store -ls -delete
        echo "Done"
        STATUS=1
    fi
    if [[ $USER_OPTION = *t* ]]
    then
        echo "Now start to remove Thumbs.db file within this directory"
        find . -name Thumbs.db -ls -delete
        echo "Done"
        STATUS=1
    fi
    if [[ $USER_OPTION = *c* ]]
    then
        echo -n "type in the file name : "
        read USER_OPTION
        echo "Now start to remove $USER_OPTION file within this directory"
        find . -name $USER_OPTION -ls -delete
        echo "Done"
        STATUS=1
    fi
    if [[ $USER_OPTION = *o* ]]
    then
        TEMP_COUNTER=$(find . -name "*.orig" | tee /dev/stderr | wc -l)
        if [[ $TEMP_COUNTER = 0 ]]
        then
            echo "No file found"
        else
            echo -n "Remove the above files?[y/n]"
            read USER_OPTION
            if [[ $USER_OPTION = y ]]
            then
                find . -name "*.orig" -delete
                echo "Done"
            else
                echo "Abort"
            fi
        fi
        STATUS=1
    fi
    if [[ $STATUS = 1 ]]
    then
        echo -n "Another round? (y/n) : "
        read USER_OPTION
        if [[ $USER_OPTION = "y" ]]
        then STATUS=0
        fi
    fi
done
echo "All process done, exit"
